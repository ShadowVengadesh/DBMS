-- Create Customers table

CREATE TABLE Customers (

    customer_id INT PRIMARY KEY,

    name VARCHAR(50),

    email VARCHAR(100),

    address VARCHAR(200)

);

-- Create Products table

CREATE TABLE Products (

    product_id INT PRIMARY KEY,

    name VARCHAR(50),

    price DECIMAL(10, 2),

    category VARCHAR(50)

);

-- Create Orders table

CREATE TABLE Orders (

    order_id INT PRIMARY KEY,

    customer_id INT,

    product_id INT,

    quantity INT,

    order_date DATE,

    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),

    FOREIGN KEY (product_id) REFERENCES Products (product_id)

);

-- Insert data into Customers table

INSERT INTO Customers (customer_id, name, email, address)

VALUES

    (1, 'John Doe', 'john@example.com', '123 Main St'),

    (2, 'Jane Smith', 'jane@example.com', '456 Oak Ave'),

    (3, 'Michael Johnson', 'michael@example.com', '789 Elm Blvd');

-- Insert data into Products table

INSERT INTO Products (product_id, name, price, category)

VALUES

    (1, 'Product A', 10.99, 'Category X'),

    (2, 'Product B', 19.99, 'Category Y'),

    (3, 'Product C', 8.99, 'Category Z');

-- Insert data into Orders table

INSERT INTO Orders (order_id, customer_id, product_id, quantity, order_date)

VALUES

    (101, 1, 1, 2, '2023-05-01'),

    (102, 1, 2, 1, '2023-05-05'),

    (103, 2, 1, 3, '2023-05-10'),

    (104, 3, 3, 2, '2023-05-15');
    -- Subquery to present purchase information

SELECT

    c.name AS customer_name,

    (

        SELECT SUM(p.price * o.quantity)

        FROM Products p

        INNER JOIN Orders o ON o.product_id = p.product_id

        WHERE o.customer_id = c.customer_id

    ) AS total_price

FROM

    Customers c;
